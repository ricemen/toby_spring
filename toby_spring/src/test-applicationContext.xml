<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="MysqlDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/study" />
		<property name="username" value="ricemen" />
		<property name="password" value="-1010232" />
	</bean>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:~/spring" />
		<property name="username" value="spring" />
		<property name="password" value="book" />
	</bean>	
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="MysqlDataSource"></property>
	</bean>	

	<tx:annotation-driven />
	
	<context:annotation-config />

<!-- 	
	<aop:config>
		<aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />
	</aop:config>
	
	<tx:advice id="transactionAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*" />
		</tx:attributes> 
	</tx:advice>	

 
 
 	<bean id="sqlService" class="springbook.user.sqlservice.DefaultSqlService" />
 -->
 
 	<bean id="sqlService" class="springbook.user.sqlservice.OxmSqlService">
 		<property name="unmarshaller" ref="unmarshaller" />
 		<property name="sqlmap" value="classpath:springbook/user/dao/sqlmap.xml" />
 		<property name="sqlRegistry" ref="sqlRegistry"></property>
 	</bean>
 	
 	<bean id="sqlRegistry" class="springbook.user.sqlservice.ConCurrentHashMapSqlRegistry" />
 	
 	<bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
 		<property name="contextPath" value="springbook.user.sqlservice.jaxb" />
 	</bean> 	
  	
 	<!--  
 	<bean id="sqlService" class="springbook.user.sqlservice.BaseSqlService">
 		<property name="sqlReader" ref="sqlReader" />	
 		<property name="sqlRegistry" ref="sqlRegistry" /> 		
 	</bean>
 	
 	<bean id="sqlRegistry" class="springbook.user.sqlservice.HashMapSqlRegistry" />
 	<bean id="sqlReader" class="springbook.user.sqlservice.JaxbXmlSqlReader">
 		<property name="sqlMapFile" value="sqlmap.xml" />
 	</bean>
 	-->
 	
	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="MysqlDataSource" />
		<property name="sqlService" ref="sqlService" />
		<!-- 
		<property name="sqlMap">
			<map>
				<entry key="add" value="insert into users(id, name, email, password, level, login, recommend) values(?, ?, ?, ?, ?, ?, ?)" />
				<entry key="get" value="select * from users where id = ? " />
				<entry key="getAll" value="select * from users order by id" />
				<entry key="deleteAll" value="delete from users" />
				<entry key="getCount" value="select count(*) from users" />
				<entry key="update" value="update users set name =?, email=?, password=?, level=?, login=?, recommend=? where id= ?" />
			</map>
		</property>
		 -->
	</bean>
	
	<!-- 
		일반 tx
	<bean id="userService" class="springbook.user.service.UserServiceTx">
		<property name="transactionManager" ref="transactionManager" />
		<property name="userService" ref="userServiceImpl" />
	</bean>
	
	 	프록시 팩토리 빈
	<bean id="userService" class="springbook.user.service.TxProxyFactoryBean">
		<property name="target" ref="userServiceImpl"></property>
		<property name="transactionManager" ref="transactionManager" />
		<property name="pattern" value="upgradeLevels" />
		<property name="serviceInterface" value="springbook.user.service.UserService" />
	</bean>	 
	 -->
	 
	<bean id="userService" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	<bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserService" parent="userService" />
		 	
	<bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	<!-- 
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice"></property>
		<property name="pointcut" ref="transactionPointcut"></property>
		
	</bean>
	
	<bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
		<property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"></property>
	</bean>
	 -->
	
	<bean id="mailSender" class="springbook.user.service.DummyMailSender" />
	
	
	<bean id="userLevelUpgradePolicy" class="springbook.user.service.NormalUserLevelUpgrade">
		<property name="userDao" ref="userDao" />
	</bean>	

</beans>
